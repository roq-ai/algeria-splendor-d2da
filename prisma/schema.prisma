generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model car {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String   @db.VarChar(255)
  price        Int?
  location     String?  @db.VarChar(255)
  availability Boolean?
  rating       Int?
  startup_id   String?  @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  startup      startup? @relation(fields: [startup_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model flight {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String    @db.VarChar(255)
  price          Int?
  origin         String?   @db.VarChar(255)
  destination    String?   @db.VarChar(255)
  departure_time DateTime? @db.Timestamp(6)
  arrival_time   DateTime? @db.Timestamp(6)
  startup_id     String?   @db.Uuid
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @default(now()) @db.Timestamp(6)
  startup        startup?  @relation(fields: [startup_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model hotel {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String   @db.VarChar(255)
  price        Int?
  location     String?  @db.VarChar(255)
  availability Boolean?
  rating       Int?
  startup_id   String?  @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  startup      startup? @relation(fields: [startup_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model offer {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String   @db.VarChar(255)
  description  String?  @db.VarChar
  price        Int?
  availability Boolean?
  rating       Int?
  startup_id   String?  @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  startup      startup? @relation(fields: [startup_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model startup {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  car         car[]
  flight      flight[]
  hotel       hotel[]
  offer       offer[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  startup     startup[]
}
